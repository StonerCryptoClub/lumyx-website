const criticalCSS = ` body { margin: 0; font-family: 'Montserrat', sans-serif; } .header { position: relative; z-index: 100; } .hero-section { min-height: 100vh; display: flex; align-items: center; } .loading-screen { display: none !important; } `; const criticalStyle = document.createElement('style'); criticalStyle.textContent = criticalCSS; document.head.appendChild(criticalStyle); (function optimizeFonts() { const preconnect = document.createElement('link'); preconnect.rel = 'preconnect'; preconnect.href = 'https: preconnect.crossOrigin = 'anonymous'; document.head.appendChild(preconnect); const preconnectStatic = document.createElement('link'); preconnectStatic.rel = 'preconnect'; preconnectStatic.href = 'https: preconnectStatic.crossOrigin = 'anonymous'; document.head.appendChild(preconnectStatic); })(); document.addEventListener('DOMContentLoaded', function() { hidePageLoader(); fixCommonErrors(); optimizeImages(); requestIdleCallback(() => { optimizeThirdPartyScripts(); preloadCriticalResources(); optimizeLayoutShift(); }); setTimeout(hidePageLoader, 500); }); function hidePageLoader() { const pageLoader = document.getElementById('page-loader'); if (pageLoader) { pageLoader.style.display = 'none'; } const container = document.querySelector('.container'); const body = document.body; if (container) { container.style.display = 'block'; container.style.opacity = '1'; } if (body) { body.style.visibility = 'visible'; body.classList.add('loaded'); } } function fixCommonErrors() { window.caseStudiesLoaded = window.caseStudiesLoaded || function() {}; window.addEventListener('error', function(e) { if (e.message && ( e.message.includes('Calendly') || e.message.includes('calendar') || e.message.includes('fb') || e.message.includes('gtag') )) { e.preventDefault(); e.stopPropagation(); } }, true); } function optimizeImages() { document.querySelectorAll('img:not([loading])').forEach(img => { img.setAttribute('loading', 'lazy'); img.setAttribute('decoding', 'async'); }); const images = document.querySelectorAll('img[data-src]'); if (images.length > 0 && 'IntersectionObserver' in window) { const imageObserver = new IntersectionObserver((entries, observer) => { entries.forEach(entry => { if (entry.isIntersecting) { const img = entry.target; img.src = img.dataset.src; img.onload = () => { img.removeAttribute('data-src'); img.classList.add('loaded'); }; imageObserver.unobserve(img); } }); }, { rootMargin: '50px 0px', threshold: 0.01 }); images.forEach(img => imageObserver.observe(img)); } const logo = document.querySelector('.logo img, .header img'); if (logo) { logo.setAttribute('fetchpriority', 'high'); logo.removeAttribute('loading'); } } function preloadCriticalResources() { const criticalResources = [ { href: '/images/logo.png', as: 'image', type: 'image/png' }, { href: '/css/main.css', as: 'style' }, { href: '/css/portfolio.css', as: 'style' } ]; criticalResources.forEach(resource => { const existing = document.querySelector(`link[href="${resource.href}"]`); if (!existing) { const link = document.createElement('link'); link.rel = 'preload'; link.href = resource.href; link.as = resource.as; if (resource.type) link.type = resource.type; document.head.appendChild(link); } }); } function optimizeLayoutShift() { document.querySelectorAll('img:not([width]):not([height])').forEach(img => { img.addEventListener('load', function() { if (!this.hasAttribute('width')) { this.setAttribute('width', this.naturalWidth); this.setAttribute('height', this.naturalHeight); } }); }); const dynamicContainers = document.querySelectorAll('[data-dynamic-height]'); dynamicContainers.forEach(container => { const minHeight = container.dataset.dynamicHeight || '200px'; container.style.minHeight = minHeight; }); } function optimizeThirdPartyScripts() { const delayedScripts = [ { src: 'https: condition: () => document.querySelector('[data-calendly-url]'), defer: true }, { src: 'https: defer: true, async: true } ]; delayedScripts.forEach(script => { if (!script.condition || script.condition()) { if (!document.querySelector(`script[src*="${script.src}"]`)) { const scriptEl = document.createElement('script'); scriptEl.src = script.src; if (script.async) scriptEl.async = true; if (script.defer) scriptEl.defer = true; document.body.appendChild(scriptEl); } } }); } const requestIdleCallback = window.requestIdleCallback || function(cb) { const start = Date.now(); return setTimeout(function() { cb({ didTimeout: false, timeRemaining: function() { return Math.max(0, 50 - (Date.now() - start)); } }); }, 1); }; function trackPerformance() { if ('performance' in window) { window.addEventListener('load', () => { requestIdleCallback(() => { const perfData = performance.getEntriesByType('navigation')[0]; if (perfData && console.log) { console.log('Performance Metrics:', { domContentLoaded: Math.round(perfData.domContentLoadedEventEnd - perfData.domContentLoadedEventStart), loadComplete: Math.round(perfData.loadEventEnd - perfData.loadEventStart), totalLoadTime: Math.round(perfData.loadEventEnd - perfData.fetchStart) }); } }); }); } } trackPerformance(); window.addEventListener('load', function() { hidePageLoader(); document.body.classList.add('page-loaded'); document.querySelectorAll('.loader, .loading, .spinner').forEach(el => { el.style.display = 'none'; }); });