const animateOnScroll = () => { const elements = document.querySelectorAll('.animate-on-scroll'); const observer = new IntersectionObserver((entries) => { entries.forEach(entry => { if (entry.isIntersecting) { entry.target.classList.add('animate'); observer.unobserve(entry.target); } }); }, { threshold: 0.1 }); elements.forEach(element => observer.observe(element)); }; class AnimationManager { constructor() { this.initSectionReveal(); this.initServiceCards(); this.initValueCards(); this.initSmoothScroll(); this.initProcessContainers(); this.initTestimonialReveal(); } initSectionReveal() { const sections = document.querySelectorAll('.section-reveal'); const observer = new IntersectionObserver((entries) => { entries.forEach(entry => { if (entry.isIntersecting) { entry.target.classList.add('visible'); observer.unobserve(entry.target); } }); }, { threshold: 0.2 }); sections.forEach(section => observer.observe(section)); } initServiceCards() { const cards = document.querySelectorAll('.service-card'); const observer = new IntersectionObserver((entries) => { entries.forEach((entry, index) => { if (entry.isIntersecting) { setTimeout(() => { entry.target.classList.add('visible'); }, index * 100); observer.unobserve(entry.target); } }); }, { threshold: 0.2 }); cards.forEach(card => observer.observe(card)); } initValueCards() { const cards = document.querySelectorAll('.value-card'); cards.forEach(card => { const icon = card.querySelector('.value-icon i'); if (icon) { card.addEventListener('mouseenter', () => { icon.style.transform = 'scale(1.1)'; icon.style.color = 'var(--primary-orange)'; }); card.addEventListener('mouseleave', () => { icon.style.transform = 'scale(1)'; icon.style.color = ''; }); } }); } initSmoothScroll() { document.querySelectorAll('a[href^="#"]').forEach(anchor => { anchor.addEventListener('click', (e) => { e.preventDefault(); const targetId = anchor.getAttribute('href'); if (targetId === '#') return; const targetElement = document.querySelector(targetId); if (targetElement) { targetElement.scrollIntoView({ behavior: 'smooth', block: 'start' }); } }); }); } initProcessContainers() { const containers = document.querySelectorAll('.process-container'); containers.forEach(container => { container.addEventListener('mouseenter', () => { container.style.borderColor = 'var(--primary-orange)'; container.style.backgroundColor = 'rgba(47, 69, 255, 0.03)'; }); container.addEventListener('mouseleave', () => { container.style.borderColor = ''; container.style.backgroundColor = ''; }); }); } initTestimonialReveal() { const testimonials = document.querySelectorAll('.testimonial-item'); const observer = new IntersectionObserver((entries) => { entries.forEach((entry, index) => { if (entry.isIntersecting) { setTimeout(() => { entry.target.classList.add('visible'); }, index * 150); observer.unobserve(entry.target); } }); }, { threshold: 0.2 }); testimonials.forEach(testimonial => observer.observe(testimonial)); } } const initMouseParallax = () => { document.addEventListener('mousemove', (e) => { const { clientX, clientY } = e; const xPos = (clientX / window.innerWidth - 0.5) * 20; const yPos = (clientY / window.innerHeight - 0.5) * 20; const elements = document.querySelectorAll('.floating-element'); elements.forEach((el, index) => { const speed = 1 - (index * 0.1); el.style.transform = `translate(${xPos * speed}px, ${yPos * speed}px)`; }); }); }; document.addEventListener('DOMContentLoaded', () => { const dynamicBg = document.createElement('div'); dynamicBg.className = 'dynamic-bg'; document.body.prepend(dynamicBg); animateOnScroll(); new AnimationManager(); initMouseParallax(); });