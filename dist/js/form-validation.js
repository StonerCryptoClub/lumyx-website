document.addEventListener('DOMContentLoaded', function() { const forms = document.querySelectorAll('form'); forms.forEach(form => { if (form.getAttribute('novalidate') === 'true') return; setupFormValidation(form); }); initContactForm(); initNewsletterForm(); }); function setupFormValidation(form) { const inputs = form.querySelectorAll('input, textarea, select'); inputs.forEach(input => { if (input.type === 'hidden') return; input.addEventListener('blur', function() { validateInput(this); }); input.addEventListener('input', function() { this.classList.remove('invalid'); const errorElement = this.parentElement.querySelector('.error-message'); if (errorElement) { errorElement.textContent = ''; errorElement.style.display = 'none'; } }); }); form.addEventListener('submit', function(e) { let isValid = true; inputs.forEach(input => { if (input.type !== 'hidden' && !validateInput(input)) { isValid = false; } }); if (!isValid) { e.preventDefault(); const firstInvalid = form.querySelector('.invalid'); if (firstInvalid) { firstInvalid.focus(); firstInvalid.scrollIntoView({ behavior: 'smooth', block: 'center' }); } const formError = form.querySelector('.form-error'); if (formError) { formError.textContent = 'Please correct the errors in the form.'; formError.style.display = 'block'; } } else { const formError = form.querySelector('.form-error'); if (formError) { formError.style.display = 'none'; } const submitButton = form.querySelector('button[type="submit"]'); if (submitButton) { const originalText = submitButton.textContent; submitButton.disabled = true; submitButton.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Sending...'; setTimeout(() => { submitButton.disabled = false; submitButton.innerHTML = originalText; }, 3000); } } }); } function validateInput(input) { if (input.disabled) return true; const isRequired = input.hasAttribute('required'); const minLength = input.getAttribute('minlength'); const maxLength = input.getAttribute('maxlength'); const pattern = input.getAttribute('pattern'); const type = input.type; const value = input.value.trim(); let errorElement = input.parentElement.querySelector('.error-message'); if (!errorElement) { errorElement = document.createElement('div'); errorElement.className = 'error-message'; input.parentElement.appendChild(errorElement); } let isValid = true; let errorMessage = ''; if (isRequired && value === '') { isValid = false; errorMessage = 'This field is required'; } else if (type === 'email' && value !== '' && !validateEmail(value)) { isValid = false; errorMessage = 'Please enter a valid email address'; } else if (type === 'url' && value !== '' && !validateUrl(value)) { isValid = false; errorMessage = 'Please enter a valid URL'; } else if ((type === 'tel' || input.classList.contains('phone-input')) && value !== '' && !validatePhone(value)) { isValid = false; errorMessage = 'Please enter a valid phone number'; } else if (minLength && value.length < parseInt(minLength)) { isValid = false; errorMessage = `Please enter at least ${minLength} characters`; } else if (maxLength && value.length > parseInt(maxLength)) { isValid = false; errorMessage = `Please enter no more than ${maxLength} characters`; } else if (pattern && value !== '' && !new RegExp(pattern).test(value)) { isValid = false; errorMessage = input.getAttribute('data-pattern-message') || 'Please match the requested format'; } if (isValid) { input.classList.remove('invalid'); input.classList.add('valid'); errorElement.textContent = ''; errorElement.style.display = 'none'; } else { input.classList.remove('valid'); input.classList.add('invalid'); errorElement.textContent = errorMessage; errorElement.style.display = 'block'; } return isValid; } function validateEmail(email) { const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/; return re.test(email); } function validateUrl(url) { try { new URL(url); return true; } catch (_) { return false; } } function validatePhone(phone) { const re = /^[+]?[(]?[0-9]{3}[)]?[-\s.]?[0-9]{3}[-\s.]?[0-9]{4,6}$/; const cleanedPhone = phone.replace(/[\s()-]/g, ''); return re.test(cleanedPhone); } function initContactForm() { const contactForm = document.getElementById('contactForm'); if (!contactForm) return; contactForm.addEventListener('submit', function(e) { e.preventDefault(); const name = document.getElementById('name').value.trim(); const email = document.getElementById('email').value.trim(); const message = document.getElementById('message').value.trim(); let isValid = true; isValid = validateInput(document.getElementById('name')) && isValid; isValid = validateInput(document.getElementById('email')) && isValid; isValid = validateInput(document.getElementById('message')) && isValid; if (isValid) { const submitButton = contactForm.querySelector('button[type="submit"]'); submitButton.disabled = true; submitButton.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Sending...'; const formData = { name: name, email: email, message: message }; sendContactForm(formData) .then(response => { showFormSuccess(contactForm, 'Thank you for your message! We will get back to you soon.'); contactForm.reset(); if (window.trackEvent) { window.trackEvent('contact_form_submission', { status: 'success' }); } }) .catch(error => { showFormError(contactForm, 'There was an error sending your message. Please try again later or contact us directly.'); if (window.trackEvent) { window.trackEvent('contact_form_submission', { status: 'error', error: error.message }); } }) .finally(() => { submitButton.disabled = false; submitButton.innerHTML = 'Send Message'; }); } }); } function initNewsletterForm() { const newsletterForms = document.querySelectorAll('.newsletter form'); newsletterForms.forEach(form => { form.addEventListener('submit', function(e) { e.preventDefault(); const emailInput = form.querySelector('input[type="email"]'); if (!emailInput) return; if (validateInput(emailInput)) { const submitButton = form.querySelector('button[type="submit"]'); if (submitButton) { submitButton.disabled = true; submitButton.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Subscribing...'; } if (window.trackEvent) { window.trackEvent('newsletter_signup', { source: 'website_footer' }); } setTimeout(() => { form.submit(); }, 500); } }); }); } function sendContactForm(formData) { return new Promise((resolve, reject) => { setTimeout(() => { resolve({ success: true }); }, 1500); }); } function showFormSuccess(form, message) { let successMessage = form.querySelector('.success-message'); if (!successMessage) { successMessage = document.createElement('div'); successMessage.className = 'success-message'; form.prepend(successMessage); } successMessage.textContent = message; successMessage.style.display = 'block'; successMessage.scrollIntoView({ behavior: 'smooth', block: 'center' }); setTimeout(() => { successMessage.style.display = 'none'; }, 5000); } function showFormError(form, message) { let errorMessage = form.querySelector('.form-error'); if (!errorMessage) { errorMessage = document.createElement('div'); errorMessage.className = 'form-error'; form.prepend(errorMessage); } errorMessage.textContent = message; errorMessage.style.display = 'block'; errorMessage.scrollIntoView({ behavior: 'smooth', block: 'center' }); setTimeout(() => { errorMessage.style.display = 'none'; }, 5000); }